{"version":3,"sources":["containers/home-page/home-page.tsx","containers/test-page/test-page.tsx","types/page-type/page-type.tsx","containers/app/app-hooks.ts","components/page-title/page-title.tsx","components/page-menu/page-menu.tsx","components/page-drawer-list/page-drawer-list.tsx","components/page-bar/page-bar.tsx","containers/app/app.tsx","serviceWorker.ts","assets/theme/index.ts","index.tsx"],"names":["HomePage","props","TestPage","Home","title","path","exactPath","element","Study","Job","Contact","AllValues","DefaultPageContext","pages","PageType","currentPage","onPageChange","page","PageContext","createContext","usePage","location","useLocation","useState","meta","filter","value","startsWith","length","pathname","setPage","useEffect","document","PageTitle","useContext","classes","useStyles","Box","className","root","paddingX","Typography","variant","Fade","in","borderLeft","borderColor","subtitle","makeStyles","theme","display","flexDirection","alignItems","color","palette","primary","main","PageMenu","Tabs","onChange","event","newValue","textColor","TabIndicatorProps","style","height","map","Tab","selected","tab","label","component","Link","to","key","minWidth","blueGrey","fontWeight","typography","fontWeightRegular","light","opacity","PageDrawerList","onItemClick","List","ListItem","listItem","button","onClick","ListItemText","width","PageBar","useTheme","trigger","useScrollTrigger","expandedMenu","useMediaQuery","breakpoints","up","openDrawer","setOpenDrawer","Slide","appear","direction","AppBar","position","Container","Button","Drawer","anchor","open","onClose","padding","justifyContent","App","pageContext","Provider","exact","textAlign","Boolean","window","hostname","match","createMuiTheme","secondary","fontFamily","join","h3","fontSize","h4","h5","spacing","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","Theme","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3db2bac1.chunk.js","sourcesContent":["import React from \"react\";\n\ntype HomePageProps = {};\n\nconst HomePage = (props: HomePageProps) => {\n  return <div>HomePage</div>;\n};\n\nexport default HomePage;\n","import React from \"react\";\n\ntype TestPageProps = {};\n\nconst TestPage = (props: TestPageProps) => {\n  return <div>TestPage</div>;\n};\n\nexport default TestPage;\n","import React from \"react\";\nimport HomePage from \"../../containers/home-page\";\nimport TestPage from \"../../containers/test-page\";\n\nexport type PageMeta = {\n  title: string;\n  path: string;\n  exactPath: boolean;\n  element: JSX.Element;\n};\n\nexport const Home: PageMeta = {\n  title: \"Home\",\n  path: \"/\",\n  exactPath: true,\n  element: <HomePage />,\n};\n\nexport const Study: PageMeta = {\n  title: \"Study\",\n  path: \"/study\",\n  exactPath: false,\n  element: <TestPage />,\n};\n\nexport const Job: PageMeta = {\n  title: \"Job\",\n  path: \"/job\",\n  exactPath: false,\n  element: <TestPage />,\n};\n\nexport const Contact: PageMeta = {\n  title: \"Contact\",\n  path: \"/contact\",\n  exactPath: false,\n  element: <TestPage />,\n};\n\nexport const Test: PageMeta = {\n  title: \"Test\",\n  path: \"/test\",\n  exactPath: false,\n  element: <TestPage />,\n};\n\nexport const AllValues = [Home, Study, Job, Contact, Test];\n\nexport function fromPath(path?: string): PageMeta {\n  const meta = AllValues.filter(\n    (value) => value.path === path || path?.startsWith(value.path + \"/\")\n  );\n  if (meta.length === 0) return Home;\n  return meta[0];\n}\n\nexport function fromTitle(title?: string): PageMeta {\n  const meta = AllValues.filter((value) => value.title === title);\n  if (meta.length === 0) return Home;\n  return meta[0];\n}\n","import { useState, createContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport * as PageType from \"../../types/page-type\";\n\nexport interface IPageContext {\n  pages: PageType.PageMeta[];\n  currentPage: PageType.PageMeta;\n  onPageChange: (page: PageType.PageMeta) => void;\n  title: string;\n}\n\nexport const DefaultPageContext = {\n  pages: [PageType.Home, PageType.Study, PageType.Job, PageType.Contact],\n  currentPage: PageType.Home,\n  onPageChange: (page: PageType.PageMeta) => {},\n  title: \"Joshua\",\n};\n\nexport const PageContext = createContext(DefaultPageContext);\n\nexport const usePage = (): IPageContext => {\n  const location = useLocation();\n  const [page, setPage] = useState(PageType.fromPath(location.pathname));\n  const { pages, title } = DefaultPageContext;\n  useEffect(() => {\n    if (page !== PageType.Home) {\n      document.title = `${title} | ${page.title}`;\n    } else {\n      document.title = title;\n    }\n  }, [page, title]);\n  return {\n    pages,\n    currentPage: page,\n    onPageChange: setPage,\n    title,\n  };\n};\n","import React, { useContext } from \"react\";\nimport { Box, Typography, Fade, makeStyles, Theme } from \"@material-ui/core\";\n\nimport * as PageType from \"../../types/page-type\";\nimport { PageContext } from \"../../containers/app/app-hooks\";\n\ntype PageTitleProps = {};\n\nconst PageTitle = (props: PageTitleProps) => {\n  const { currentPage, title } = useContext(PageContext);\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box paddingX={2}>\n        <Typography variant=\"h3\">{title}</Typography>\n      </Box>\n      <Fade in={currentPage !== PageType.Home}>\n        <Box paddingX={2} borderLeft={1} borderColor=\"divider\">\n          <Typography className={classes.subtitle} variant=\"h5\">\n            {currentPage !== PageType.Home ? currentPage.title : \"\"}\n          </Typography>\n        </Box>\n      </Fade>\n    </Box>\n  );\n};\n\nexport default PageTitle;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  subtitle: {\n    color: theme.palette.primary.main,\n  },\n}));\n","import React, { useContext } from \"react\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\n\nimport { Link } from \"react-router-dom\";\nimport { blueGrey } from \"@material-ui/core/colors\";\nimport { PageContext } from \"../../containers/app/app-hooks\";\n\ntype PageMenuProps = {};\n\nconst PageMenu = (props: PageMenuProps) => {\n  const { pages, currentPage, onPageChange } = useContext(PageContext);\n  const classes = useStyles();\n  return (\n    <Tabs\n      value={currentPage}\n      onChange={(event, newValue) => {\n        onPageChange(newValue);\n      }}\n      textColor=\"primary\"\n      variant=\"fullWidth\"\n      TabIndicatorProps={{\n        style: {\n          height: \"0\",\n        },\n      }}\n    >\n      {pages.map((page) => (\n        <Tab\n          selected={page === currentPage}\n          className={classes.tab}\n          label={page.title}\n          value={page}\n          component={Link}\n          to={page.path}\n          key={page.path}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default PageMenu;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  tab: {\n    minWidth: 80,\n    color: blueGrey[200],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover\": {\n      color: theme.palette.primary.light,\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: theme.palette.primary.main,\n    },\n    \"&:focus\": {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Theme,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport { PageContext } from \"../../containers/app/app-hooks\";\n\ntype PageDrawerListProps = {\n  onItemClick: () => void;\n};\n\nconst PageDrawerList = (props: PageDrawerListProps) => {\n  const { onItemClick } = props;\n  const { pages, currentPage, onPageChange } = useContext(PageContext);\n  const classes = useStyles();\n  return (\n    <List className={classes.root}>\n      {pages.map((page) => (\n        <ListItem\n          className={classes.listItem}\n          button\n          key={page.path}\n          selected={page === currentPage}\n          component={Link}\n          to={page.path}\n          onClick={() => {\n            onPageChange(page);\n            onItemClick();\n          }}\n        >\n          <ListItemText primary={page.title} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default PageDrawerList;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 250,\n  },\n  listItem: {\n    \"&:hover\": {\n      color: theme.palette.primary.light,\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: theme.palette.primary.main,\n    },\n    \"&:focus\": {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Slide,\n  AppBar,\n  Container,\n  makeStyles,\n  Theme,\n  useScrollTrigger,\n  useMediaQuery,\n  useTheme,\n  Button,\n  Drawer,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport PageTitle from \"../page-title\";\nimport PageMenu from \"../page-menu\";\nimport PageDrawerList from \"../page-drawer-list\";\n\ntype PageBarProps = {};\n\nconst PageBar = (props: PageBarProps) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n  const expandedMenu = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      <AppBar color=\"inherit\" position=\"sticky\">\n        <Container className={classes.root}>\n          <PageTitle />\n          {expandedMenu ? (\n            <PageMenu />\n          ) : (\n            <Button color=\"primary\" onClick={() => setOpenDrawer(true)}>\n              <MenuIcon />\n            </Button>\n          )}\n          <Drawer\n            anchor=\"right\"\n            open={openDrawer}\n            onClose={() => setOpenDrawer(false)}\n          >\n            <PageDrawerList onItemClick={() => setOpenDrawer(false)} />\n          </Drawer>\n        </Container>\n      </AppBar>\n    </Slide>\n  );\n};\n\nexport default PageBar;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    height: \"4rem\",\n    padding: \"0% 1rem\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { makeStyles, Theme, Container } from \"@material-ui/core\";\n\nimport * as PageType from \"../../types/page-type\";\nimport PageBar from \"../../components/page-bar\";\nimport { usePage, PageContext } from \"./app-hooks\";\n\nconst App = () => {\n  const pageContext = usePage();\n  const classes = useStyles();\n  return (\n    <PageContext.Provider value={pageContext}>\n      <div className={classes.root}>\n        <PageBar />\n\n        <Switch>\n          {pageContext.pages.map((page) => (\n            <Route exact={page.exactPath} path={page.path} key={page.path}>\n              <Container className={classes.page}>{page.element}</Container>\n            </Route>\n          ))}\n          <Redirect to={PageType.Home.path} />\n        </Switch>\n      </div>\n    </PageContext.Provider>\n  );\n};\n\nexport default App;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    textAlign: \"center\",\n  },\n  page: {\n    padding: \"0% 1rem\",\n  },\n}));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#413c69\",\n    },\n    secondary: {\n      main: \"#f6d198\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    h3: {\n      fontSize: \"2rem\",\n      fontWeight: 500,\n    },\n    h4: {\n      fontSize: \"1.8rem\",\n      fontWeight: 300,\n    },\n    h5: {\n      fontSize: \"1.6rem\",\n      fontWeight: 200,\n    },\n  },\n  spacing: 8,\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\n\nimport \"./index.css\";\nimport App from \"./containers/app\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Theme from \"./assets/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={Theme}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}